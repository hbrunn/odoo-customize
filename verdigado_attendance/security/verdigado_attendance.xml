<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <!-- groups -->
    <record id="module_category_verdigado" model="ir.module.category">
        <field name="name">Verdigado</field>
    </record>
    <record id="group_verdigado_employee" model="res.groups">
        <field name="name">Employee</field>
        <field name="category_id" ref="module_category_verdigado" />
        <field
            name="implied_ids"
            eval="[(6, 0, [ref('hr_attendance.group_hr_attendance'), ref('base.group_user')])]"
        />
    </record>
    <record id="group_verdigado_officer" model="res.groups">
        <field name="name">Officer</field>
        <field name="category_id" ref="module_category_verdigado" />
        <field
            name="implied_ids"
            eval="[(6, 0, [ref('group_verdigado_employee'), ref('hr.group_hr_user'), ref('hr_attendance.group_hr_attendance_user'), ref('hr_holidays.group_hr_holidays_user')])]"
        />
    </record>
    <record id="group_verdigado_manager" model="res.groups">
        <field name="name">Manager</field>
        <field name="category_id" ref="module_category_verdigado" />
        <field
            name="implied_ids"
            eval="[(6, 0, [ref('group_verdigado_officer'), ref('hr.group_hr_manager'), ref('hr_attendance.group_hr_attendance_manager'), ref('hr_holidays.group_hr_holidays_manager')])]"
        />
    </record>
    <!-- hr.employee -->
    <record id="rule_hr_employee_user" model="ir.rule">
        <field name="name">Restrict HR users to their own employees</field>
        <field name="model_id" ref="hr.model_hr_employee" />
        <field name="domain_force">[('id','child_of',user.employee_ids.ids)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field name="groups" eval="[(4, ref('hr.group_hr_user'))]" />
    </record>
    <record id="rule_hr_employee_manager" model="ir.rule">
        <field name="name">Lift restrictions for HR managers</field>
        <field name="model_id" ref="hr.model_hr_employee" />
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field name="groups" eval="[(4, ref('hr.group_hr_manager'))]" />
    </record>

    <!-- hr.employee.public -->
    <record id="rule_hr_employee_public_user" model="ir.rule">
        <field name="name">
            Restrict all users to their own public employees, and employees of their
            department
        </field>
        <field name="model_id" ref="hr.model_hr_employee_public" />
        <field name="domain_force">
            ['|', '|', ('department_id', 'child_of', user.employee_id.department_id.id)
            if
            user.employee_id.department_id else ('id', '=', user.employee_id.id),
            ('employee_id','child_of',user.employee_ids.ids),
            ('employee_id','parent_of',user.employee_ids.ids),
            ]
        </field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field name="groups" eval="[(4, ref('base.group_user'))]" />
    </record>
    <record id="rule_hr_employee_public_manager" model="ir.rule">
        <field name="name">Lift restrictions for HR managers</field>
        <field name="model_id" ref="hr.model_hr_employee_public" />
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field name="groups" eval="[(4, ref('hr.group_hr_manager'))]" />
    </record>

    <!-- hr.attendance -->
    <record id="hr_attendance.hr_attendance_rule_attendance_manager" model="ir.rule">
        <!-- note the xmlid of this rule is misleading, it applies to hr_attendance.group_hr_attendance_user -->
        <field name="name">
            Restrict HR attendance administrators to their own employees
        </field>
        <field name="domain_force">
            [('employee_id','child_of',user.employee_ids.ids)]
        </field>
    </record>
    <record id="rule_hr_attendance_manager" model="ir.rule">
        <field name="name">Lift restrictions for HR attendance administrators</field>
        <field name="model_id" ref="hr_attendance.model_hr_attendance" />
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field
            name="groups"
            eval="[(4, ref('hr_attendance.group_hr_attendance_manager'))]"
        />
    </record>

    <!-- hr.attendance.report -->
    <record id="rule_hr_attendance_report_user" model="ir.rule">
        <field name="name">
            Restrict HR attendance administrators to their own employees
        </field>
        <field name="model_id" ref="hr_attendance.model_hr_attendance_report" />
        <field name="domain_force">
            [('employee_id','child_of',user.employee_ids.ids)]
        </field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field
            name="groups"
            eval="[(4, ref('hr_attendance.group_hr_attendance_user')), (4, ref('hr_attendance.group_hr_attendance'))]"
        />
    </record>
    <record id="rule_hr_attendance_report_manager" model="ir.rule">
        <field name="name">Lift restrictions for HR attendance administrators</field>
        <field name="model_id" ref="hr_attendance.model_hr_attendance_report" />
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field
            name="groups"
            eval="[(4, ref('hr_attendance.group_hr_attendance_manager'))]"
        />
    </record>

    <!-- hr.attendance.overtime -->
    <record
        id="hr_attendance.hr_attendance_rule_attendance_overtime_manager"
        model="ir.rule"
    >
        <!-- note the xmlid of this rule is misleading, it applies to hr_attendance.group_hr_attendance_user -->
        <field name="name">
            Restrict HR attendance administrators to their own employees
        </field>
        <field name="domain_force">
            [('employee_id','child_of',user.employee_ids.ids)]
        </field>
    </record>
    <record id="rule_hr_attendance_overtime_manager" model="ir.rule">
        <field name="name">Lift restrictions for HR attendance administrators</field>
        <field name="model_id" ref="hr_attendance.model_hr_attendance_overtime" />
        <field name="domain_force">[(1, '=', 1)]</field>
        <field name="perm_read" eval="True" />
        <field name="perm_write" eval="True" />
        <field name="perm_create" eval="True" />
        <field name="perm_unlink" eval="True" />
        <field
            name="groups"
            eval="[(4, ref('hr_attendance.group_hr_attendance_manager'))]"
        />
    </record>

    <record id="base.default_user" model="res.users">
        <!-- don't make new users hr managers by default /-->
        <field
            name="groups_id"
            eval="[(3, ref('hr.group_hr_manager')), (3, ref('hr_attendance.group_hr_attendance_manager')), (3, ref('hr_holidays.group_hr_holidays_manager')), (4, ref('verdigado_attendance.group_verdigado_employee'))]"
        />
    </record>
</odoo>
